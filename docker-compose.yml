version: '3'
services:

  nginx:
    image: nginx:alpine
    ports:
      - "20000:80"
    volumes:
      - "~/DockerTasks/task28/dkr-30/nginx/default.conf:/etc/nginx/conf.d/default.conf"
    restart: unless-stopped
    depends_on:
      - voting 

  voting:
    build: ./
    ports:
      - "9000:9000"
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      - mysql
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/ping"]
      interval: 30s
      timeout: 30s
      retries: 5
    

  mysql:
    image: mysql:5.7
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: voting
      MYSQL_PASSWORD: voting
      MYSQL_USER: voting
      MYSQL_ROOT_PASSWORD: root
    restart: unless-stopped
    
  redis:
    image: redis:7.2.0
    restart: unless-stopped

  fluentd: 
    build: ./fluentd
    image: fluent:own
    container_name: Fluent
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
    ports:
      - 24224:24224
      - 24224:24224/udp

  elasticsearch:
    image: elasticsearch:7.17.0
    container_name: ESearch
    expose:
      - 9200
    environment:
      - discovery.type=single-node 
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: kibana:7.17.0
    container_name: Kibana
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

networks:
  app-network:
volumes:
  esdata:
